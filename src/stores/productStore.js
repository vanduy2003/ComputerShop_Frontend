import { defineStore } from "pinia";
import axios from "axios";
import { safeParseJSON } from "../utils/utils"; // Import h√†m parse JSON

const useProductStore = defineStore("product", {
    state: () => ({
        products: [], // Danh s√°ch s·∫£n ph·∫©m
        product: {}, // S·∫£n ph·∫©m ƒëang xem
        selectedImage: "", // ·∫¢nh ch√≠nh c·ªßa s·∫£n ph·∫©m
        components: [], // Danh s√°ch linh ki·ªán c·ªßa s·∫£n ph·∫©m

        loading: false,
        error: null,
    }),

    actions: {
        // üü¢ L·∫•y danh s√°ch t·∫•t c·∫£ s·∫£n ph·∫©m
        async fetchProducts() {
            if (this.products.length > 0) return; // N·∫øu ƒë√£ c√≥ d·ªØ li·ªáu, kh√¥ng g·ªçi l·∫°i API

            this.loading = true;
            this.error = null;
            try {
                const response = await axios.get(
                    "http://localhost:3000/api/v1/data/products"
                );
                this.products = response.data;
            } catch (error) {
                this.error = "Kh√¥ng th·ªÉ t·∫£i d·ªØ li·ªáu s·∫£n ph·∫©m";
                console.error(error);
            } finally {
                this.loading = false;
            }
        },

        // üü¢ L·∫•y th√¥ng tin s·∫£n ph·∫©m theo ID
        async fetchProductDataID(productId) {
            productId = Number(productId); // √âp ki·ªÉu ƒë·ªÉ tr√°nh l·ªói so s√°nh

            // üõë N·∫øu s·∫£n ph·∫©m ƒë√£ ƒë∆∞·ª£c load v√† ƒë√∫ng ID, kh√¥ng g·ªçi API n·ªØa
            if (this.product && this.product.id === productId) return;

            this.loading = true;
            this.error = null;
            try {
                const response = await axios.get(
                    `http://localhost:3000/api/v1/data/products/${productId}`
                );
                if (!response.data || response.data.length === 0) {
                    throw new Error("Kh√¥ng c√≥ d·ªØ li·ªáu s·∫£n ph·∫©m");
                }

                let productData = response.data[0];

                // ‚úÖ Parse JSON an to√†n
                productData.imageDetail = safeParseJSON(
                    productData.imageDetail,
                    []
                );
                productData.components = safeParseJSON(
                    productData.components,
                    []
                );

                // ‚úÖ X√°c ƒë·ªãnh ·∫£nh ch√≠nh m·ªôt c√°ch an to√†n
                this.selectedImage =
                    productData.imageDetail?.length > 0
                        ? productData.imageDetail[0]
                        : productData.product_images ||
                          "https://via.placeholder.com/500";

                this.product = productData;
                this.components = productData.components;
            } catch (error) {
                this.error = "Kh√¥ng th·ªÉ t·∫£i s·∫£n ph·∫©m";
                console.error(error);
            } finally {
                this.loading = false;
            }
        },
    },
});

export { useProductStore };
